/* 틀린 곳에 주석을 달아주세요.
class MathClass{

	String 3Word; 			// 변수가 숫자로 시작
	int count;				// 객체의 갯수를 객체변수로 선언함
	
	public void MathClass(){		// 생성자로 선언하려하였지만 리턴이 없는 메소드형으로 선언함
		count++;
	}

	public MathClass(String word){	// 생성자에 word 파라미터를 받지만 사용하는건 없음 word의 변수의 초기화를 진행하는것이 바람직함
		count++;
	}

    //두 정수의 합을 리턴하는 메소드
	public void sum(int x, int y){ 		// 리턴이 없는 메소드로 선언함 리턴을 하지 않거나 정수형으로 리턴해야함
		int result;                                                                                                          
		result=x+y;
		return result;		
	}

	//배열의 합을 리턴하는 메소드
	public int sum(int[] array){		// 전체 배열의 합을 리턴하지 못하고 전체 배열의 5개 만의 합을 리턴함 배열의 갯수가 더적을경우는 bounds 에러 발생
					// result를 정수형으로 선언하지 않고 사용함 // 빠트림
		for(int i=0; i<5; i++){
			result += array[i];
		}
		return result;
	}

	//두 String을 연결해서 리턴하는 메소드	
	public int sum(String s1, String s2){	// 메소드의 리턴형이 리턴값과 맞지 않음 
		return s1+s2;
	}

	//만들어진 객체 갯수를 리턴하는 메소드
	public static int getCount(){		// 카운트가 객체의 갯수를 리턴하지 못함
		return count;
	}
} 
*/
//틀린 부분을 바르게 고쳐주세요.
class MathClass{

	String word;
	static int count;
	
	public MathClass(){
		count++;
	}

	public MathClass(String word){
		this.word = word;
		count++;
	}

    //두 정수의 합을 리턴하는 메소드
	public int sum(int x, int y){
		int result;
		result=x+y;
		return result;
	}

	//배열의 합을 리턴하는 메소드
	public int sum(int[] array){
		int result = 0; // 빠트림
		for(int i=0; i<array.length; i++){
			result += array[i];
		}
		return result;
	}

	//두 String을 연결해서 리턴하는 메소드
	public String sum(String s1, String s2){
		return s1+s2;
	}

	//만들어진 객체 갯수를 리턴하는 메소드
	public static int getCount(){
		return count;
	}
}

class MathClassTest{
	//main()에는 틀린 코드가 없습니다.
	public static void main(String[] args){
		
		MathClass mc = new MathClass();
		System.out.println(mc.sum(3,5));// 8
		
		int[] array01={1,2,3,4,5};
		System.out.println(mc.sum(array01));// 15
		
		int[] array02={1,2,3,4,5,6,7,8,9,10};
		System.out.println(mc.sum(array02));// 55
		
		System.out.println(mc.sum("자바","잼나"));// 자바잼나

		MathClass mc2s = new MathClass("MathClass");		
		System.out.println(MathClass.getCount());// 2
	}
}
